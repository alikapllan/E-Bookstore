
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.RowFilter;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import java.sql.*;
import javax.swing.JOptionPane;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author pc
 */
public class book_ui extends javax.swing.JFrame {

    public static ArrayList<books> book_list_basket = new ArrayList<>();
    /**
     * Creates new form book_ui
     */
    public book_ui() {
        initComponents();
        
        //showing book datas live
        show_books_live();
        
        //puts the window in the middle of the screen
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        book_table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        book_search_field = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        book_isbn_field = new javax.swing.JTextField();
        book_name_field = new javax.swing.JTextField();
        book_year_field = new javax.swing.JTextField();
        book_price_field = new javax.swing.JTextField();
        book_page_field = new javax.swing.JTextField();
        book_author_field = new javax.swing.JTextField();
        book_publisher_field = new javax.swing.JTextField();
        addToBasket_button = new javax.swing.JButton();
        basket_icon = new javax.swing.JLabel();
        back_icon = new javax.swing.JLabel();
        refresh_icon = new javax.swing.JLabel();
        authors_button = new javax.swing.JButton();
        publisher_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("E-BOOK STORE");

        book_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book ISBN", "Name", "Year", "Price", "Page ", "Author", "Publisher"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        book_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                book_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(book_table);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Book Filter :");

        book_search_field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                book_search_fieldKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Book ISBN :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Book Name :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Year :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Book Price :");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Book Page :");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Book Author :");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Book Publisher :");

        book_isbn_field.setEditable(false);

        book_name_field.setEditable(false);

        book_year_field.setEditable(false);

        book_price_field.setEditable(false);

        book_page_field.setEditable(false);

        book_author_field.setEditable(false);

        book_publisher_field.setEditable(false);

        addToBasket_button.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        addToBasket_button.setText("ADD TO BASKET");
        addToBasket_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToBasket_buttonActionPerformed(evt);
            }
        });

        basket_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/basket.png"))); // NOI18N
        basket_icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                basket_iconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                basket_iconMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                basket_iconMouseExited(evt);
            }
        });

        back_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/back.png"))); // NOI18N
        back_icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                back_iconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                back_iconMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                back_iconMouseExited(evt);
            }
        });

        refresh_icon.setIcon(new javax.swing.ImageIcon("C:\\Users\\pc\\Desktop\\Tulpar için\\Udemy Courses\\SQL\\E-Bücherei Project\\icons\\refresh.png")); // NOI18N
        refresh_icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refresh_iconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                refresh_iconMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                refresh_iconMouseExited(evt);
            }
        });

        authors_button.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        authors_button.setText("Authors");
        authors_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authors_buttonActionPerformed(evt);
            }
        });

        publisher_button.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        publisher_button.setText("Publishers");
        publisher_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publisher_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(back_icon)
                        .addGap(283, 283, 283)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(book_search_field, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(authors_button, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(publisher_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(book_author_field))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(book_page_field))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(book_price_field))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(book_year_field))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(book_name_field))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(book_isbn_field, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(addToBasket_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(book_publisher_field))))
                                .addGap(18, 18, 18)
                                .addComponent(refresh_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(basket_icon))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 703, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(back_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(book_isbn_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(book_name_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(book_year_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(book_price_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(book_page_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(book_author_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(book_publisher_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(addToBasket_button)
                        .addGap(35, 35, 35)
                        .addComponent(basket_icon))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(37, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(book_search_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(authors_button)
                            .addComponent(publisher_button))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(refresh_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void book_search_fieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_book_search_fieldKeyReleased
        /*
            once pressed a letter on the book search field, this function will be triggered
            at all pressing, this function sends the given input to the book search function
        */
        String search_keyword = book_search_field.getText();
        
        book_search(search_keyword);
    }//GEN-LAST:event_book_search_fieldKeyReleased

    private void basket_iconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_basket_iconMouseEntered
        Border border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.BLACK);
        basket_icon.setBorder(border);
    }//GEN-LAST:event_basket_iconMouseEntered

    private void basket_iconMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_basket_iconMouseExited
        basket_icon.setBorder(null);
    }//GEN-LAST:event_basket_iconMouseExited

    private void basket_iconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_basket_iconMouseClicked
        dispose();
        new basket().setVisible(true);
    }//GEN-LAST:event_basket_iconMouseClicked

    private void back_iconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back_iconMouseEntered
        Border border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.BLACK);
        back_icon.setBorder(border);
    }//GEN-LAST:event_back_iconMouseEntered

    private void back_iconMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back_iconMouseExited
        back_icon.setBorder(null);
    }//GEN-LAST:event_back_iconMouseExited

    private void back_iconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back_iconMouseClicked
        dispose();
        new login().setVisible(true);
    }//GEN-LAST:event_back_iconMouseClicked

    private void refresh_iconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_iconMouseEntered
        Border border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.BLACK);
        refresh_icon.setBorder(border);
    }//GEN-LAST:event_refresh_iconMouseEntered

    private void refresh_iconMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_iconMouseExited
        refresh_icon.setBorder(null);
    }//GEN-LAST:event_refresh_iconMouseExited

    private void refresh_iconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_iconMouseClicked
        clean_fields();
    }//GEN-LAST:event_refresh_iconMouseClicked

    private void book_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_book_tableMouseClicked
        try {
            transfer_bookdatas_to_fields();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_book_tableMouseClicked

    private void addToBasket_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToBasket_buttonActionPerformed
        if(book_isbn_field.getText().equals("")){
            JOptionPane.showMessageDialog(null, "There is no book selected!","SELECT BOOK",2);
        }
        else{
            books book;
            
            int book_isbn = Integer.valueOf(book_isbn_field.getText());
            String book_name = book_name_field.getText();
            int book_year = Integer.valueOf(book_year_field.getText());
            int book_price = Integer.valueOf(book_price_field.getText());
            int book_page = Integer.valueOf(book_page_field.getText());
            int book_author = Integer.valueOf(book_author_field.getText());
            int book_publisher = Integer.valueOf(book_publisher_field.getText());
            
            book = new books(book_isbn,book_name,book_year,book_price,book_page,book_author,book_publisher);
            book_list_basket.add(book);
            JOptionPane.showMessageDialog(null, "Book has been added to the basket!");
            clean_fields();
        }
    }//GEN-LAST:event_addToBasket_buttonActionPerformed

    private void authors_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authors_buttonActionPerformed
        new authors().setVisible(true);
    }//GEN-LAST:event_authors_buttonActionPerformed

    private void publisher_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publisher_buttonActionPerformed
        new publishers().setVisible(true);
    }//GEN-LAST:event_publisher_buttonActionPerformed
    void book_search(String search_keyword){
        //this function sorts all book according to the given input 
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<DefaultTableModel>((DefaultTableModel)book_table.getModel());
        sorter.setRowFilter(RowFilter.regexFilter(search_keyword));
        book_table.setRowSorter(sorter);
    }
    void show_books_live(){
        
        ArrayList<books> book_list = get_book_datas();
        DefaultTableModel model = (DefaultTableModel)book_table.getModel();
            model.setRowCount(0);
        Object[] row = new Object[7];
        
        for(int i=0; i<book_list.size();i++){
            row[0] = book_list.get(i).getIsbn();
            row[1] = book_list.get(i).getName();
            row[2] = book_list.get(i).getYear();
            row[3] = book_list.get(i).getPrice();
            row[4] = book_list.get(i).getPage_number();
            row[5] = book_list.get(i).getAuthor_id();
            row[6] = book_list.get(i).getPublisher_id();
            
            //with this method we allow to all book datas live existing in the database
            model.addRow(row);
        }
    }
    ArrayList<books> get_book_datas(){
        //we save here all book datas
        ArrayList<books> books = new ArrayList<>();
        
        String SQL_expression ="SELECT * FROM book_not_to_update";
        
        try {
            
            postresql_db_connection db_connection = new postresql_db_connection();
            PreparedStatement st = db_connection.connect().prepareStatement(SQL_expression);
            ResultSet rs;
            rs = st.executeQuery();
            
            //an object from books class so that we can save all book datas existing in database
            books book;
            
            while (rs.next()) {
                book = new books(rs.getInt("book_isbn"),rs.getString("book_name"),rs.getInt("book_year"),rs.getInt("book_price"),
                                rs.getInt("book_page_number"),rs.getInt("author_id"),rs.getInt("publisher_id"));
                books.add(book);
            }
            
        } catch (Exception e) {
            e.printStackTrace();;
        }
        return books;
    }
    
    void clean_fields(){
        book_isbn_field.setText("");
        book_name_field.setText("");
        book_year_field.setText("");
        book_price_field.setText("");
        book_page_field.setText("");
        book_author_field.setText("");
        book_publisher_field.setText("");
    }
    
    void transfer_bookdatas_to_fields(){
        
        try {
            DefaultTableModel tableModel = (DefaultTableModel)book_table.getModel();
            
            int row = book_table.getSelectedRow();

            book_isbn_field.setText(String.valueOf(tableModel.getDataVector().elementAt(book_table.convertRowIndexToModel(row)).get(0)));
            book_name_field.setText(String.valueOf(tableModel.getDataVector().elementAt(book_table.convertRowIndexToModel(row)).get(1)));
            book_year_field.setText(String.valueOf(tableModel.getDataVector().elementAt(book_table.convertRowIndexToModel(row)).get(2)));
            book_price_field.setText(String.valueOf(tableModel.getDataVector().elementAt(book_table.convertRowIndexToModel(row)).get(3)));
            book_page_field.setText(String.valueOf(tableModel.getDataVector().elementAt(book_table.convertRowIndexToModel(row)).get(4)));
            book_author_field.setText(String.valueOf(tableModel.getDataVector().elementAt(book_table.convertRowIndexToModel(row)).get(5)));
            book_publisher_field.setText(String.valueOf(tableModel.getDataVector().elementAt(book_table.convertRowIndexToModel(row)).get(6)));
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }
    public ArrayList<books> get_selected_books_inBasket(){
        return book_list_basket;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(book_ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(book_ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(book_ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(book_ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new book_ui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToBasket_button;
    private javax.swing.JButton authors_button;
    private javax.swing.JLabel back_icon;
    private javax.swing.JLabel basket_icon;
    private javax.swing.JTextField book_author_field;
    private javax.swing.JTextField book_isbn_field;
    private javax.swing.JTextField book_name_field;
    private javax.swing.JTextField book_page_field;
    private javax.swing.JTextField book_price_field;
    private javax.swing.JTextField book_publisher_field;
    private javax.swing.JTextField book_search_field;
    private javax.swing.JTable book_table;
    private javax.swing.JTextField book_year_field;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton publisher_button;
    private javax.swing.JLabel refresh_icon;
    // End of variables declaration//GEN-END:variables

}
